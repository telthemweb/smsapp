
# Force Heroku to use JDK 14
java.runtime.version=14

# ############# HEROKU DB ##############
# spring.datasource.url= jdbc:postgresql://ec2-52-200-134-180.compute-1.amazonaws.com:5432/da34vptsredjdg
# spring.datasource.username=qwbpwcokcwqdrh
# spring.datasource.password=b98bcaad55c8f74cd8f74a04d8d42f9b213d8cceaf1897e7e0e50cc09d979930

#spring.datasource.url= jdbc:postgresql://127.0.0.1:5432/mns-237
#spring.datasource.username=postgres
#spring.datasource.password=idrice

spring.datasource.url=jdbc:mysql://localhost:3306/sms237?useUnicode=true&characterEncoding=UTF-8&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=idrice

#spring.datasource.url = jdbc:postgres://ec2-52-200-134-180.compute-1.amazonaws.com:5432/dbl1p7326dr3it
#spring.datasourceusername=rgxdzagzydfgfc
#spring.datasource.password=ae9080d685d876f09b6423c85b3af7a16062ee3de2ed70d7f59d581286b1b12b



# ############ DEV ##########################

# The SQL dialect makes Hibernate generate better SQL for the chosen database
 #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Force database to  init on start up
 spring.datasource.initialization-mode=always
# # Enable multipart uploads
 spring.servlet.multipart.enabled=true

 spring.profiles.active=production

# Disable feature detection by this undocumented parameter.
# Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
# spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
 spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# ############ END - DEV ##########################

 spring.jpa.show-sql=true
# none to ignore the data.sql in resources folder, create will used it
 spring.jpa.hibernate.ddl-auto=none
 
 # override the default user and password
 
 #spring.security.user.email=admin@yahoo.com
 #spring.security.user.password=0000

#spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


spring.freemarker.template-loader-path: classpath:/templates
spring.freemarker.suffix: .ftl

mail.smtp.host={YOUR_SES_SMTP_HOST}
mail.smtp.port={YOUR_SES_SMTP_PORT}
mail.smtp.username={YOUR_SES_SMTP_USERNAME}
mail.smtp.password={YOUR_SES_SMTP_PASSWORD}
mail.from={YOUR_FROM_EMAIL}
mail.from-name={YOUR_FROM_NAME}
mail.to={YOUR_TO_EMAIL}


